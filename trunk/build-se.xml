<!--
 ! Copyright 2007-2009 UnboundID Corp.
 ! All Rights Reserved.
 -->
<!--
 ! Copyright (C) 2008-2009 UnboundID Corp.
 !
 ! This program is free software; you can redistribute it and/or modify
 ! it under the terms of the GNU General Public License (GPLv2 only)
 ! or the terms of the GNU Lesser General Public License (LGPLv2.1 only)
 ! as published by the Free Software Foundation.
 !
 ! This program is distributed in the hope that it will be useful,
 ! but WITHOUT ANY WARRANTY; without even the implied warranty of
 ! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ! GNU General Public License for more details.
 !
 ! You should have received a copy of the GNU General Public License
 ! along with this program; if not, see <http://www.gnu.org/licenses>.
 -->
<project name="build-se" basedir="." default="package">

  <description>
    This project provides a Java SDK that can be used to communicate with a
    directory server using LDAPv3.
  </description>




  <!-- Define a number of project-wide properties. -->
  <property name="src.dir"         location="src" />
  <property name="buildsrc.dir"    location="build-src" />
  <property name="gensrc.dir"      location="gen-src" />
  <property name="build.dir"       location="build" />
  <property name="docs.dir"        location="docs" />
  <property name="se.distroot.dir" location="dist-root-se" />
  <property name="resource.dir"    location="resource" />
  <property name="classes.dir"     location="${build.dir}/classes" />
  <property name="lib.dir"         location="${build.dir}/lib" />
  <property name="package.dir"     location="${build.dir}/package" />


  <!-- Define properties used for processing message files. -->
  <property name="messages.dir"         location="messages" />
  <property name="messages.src.dir"     location="${buildsrc.dir}/messages" />
  <property name="messages.classes.dir" location="${build.dir}/messages" />
  <property name="messages.gensrc.dir"  location="${gensrc.dir}/messages" />


  <!-- Define properties used for sanity checking the build. -->
  <property name="sc.src.dir"     location="${buildsrc.dir}/sanitycheck" />
  <property name="sc.classes.dir" location="${build.dir}/sanitycheck" />


  <!-- Define properties used for copying the documentation into place. -->
  <property name="copydocs.src.dir"     location="${buildsrc.dir}/copydocs" />
  <property name="copydocs.classes.dir" location="${build.dir}/copydocs" />


  <!-- Define properties used for checkstyle analysis. -->
  <property name="checkstyle.dir"       location="ext/checkstyle" />
  <property name="checkstyle.cache.dir" location=".checkstyle-cache" />


  <!-- Define properties used for Ant tasks -->
  <property name="ant.lib.dir" location="ext/ant/lib" />


  <!-- Define the amount of memory to use for forked VMs -->
  <property name="MEM" value="256M" />




  <!-- Clean up after an earlier build. -->
  <target name="clean" description="Clean up after an earlier build">
    <delete dir="${build.dir}" />
  </target>




  <!-- Generate message source files. -->
  <target name="generatemessages"
          description="Generate message file enumerations">
    <!-- Recreate the build/messages directory if necessary. -->
    <delete dir="${messages.classes.dir}" />
    <mkdir dir="${build.dir}" />
    <mkdir dir="${messages.classes.dir}" />

    <!-- Compile the Ant task used to generate the messages source files. -->
    <javac srcdir="${messages.src.dir}" destdir="${messages.classes.dir}"
           target="1.5" deprecation="true" fork="true"
           memoryInitialSize="${MEM}" memoryMaximumSize="${MEM}"
           optimize="true" debug="on" debuglevel="lines,source,vars">
      <compilerarg value="-Xlint:all" />
      <classpath>
        <fileset dir="${ant.lib.dir}">
          <include name="*.jar" />
        </fileset>
      </classpath>
    </javac>

    <!-- Define and invoke the task. -->
    <taskdef name="genmsgs"
             classname="com.unboundid.buildtools.messages.GenerateMessages">
      <classpath>
        <pathelement location="${messages.classes.dir}" />
      </classpath>
    </taskdef>

    <delete dir="${messages.gensrc.dir}" />
    <mkdir  dir="${messages.gensrc.dir}" />
    <genmsgs propertiesDir="${messages.dir}"
             generatedSourceDir="${messages.gensrc.dir}" />
  </target>




  <!-- Generate a Version source file. -->
  <target name="generateversion"
          description="Generate a Version.java source file">
    <tstamp>
      <format property="timestamp" pattern="yyyyMMddHHmmss'Z'" timezone="UTC" />
    </tstamp>

    <tstamp>
      <format property="year" pattern="yyyy" timezone="UTC" />
    </tstamp>

    <loadproperties srcFile="version.properties" />

    <condition property="svn.path" value="{not-applicable}">
      <not>
        <isset property="svn.path" />
      </not>
    </condition>

    <condition property="svn.version" value="-1">
      <not>
        <isset property="svn.version" />
      </not>
    </condition>

    <filter token="BUILD_TIMESTAMP" value="${timestamp}" />
    <filter token="year" value="${year}" />
    <filter token="REPOSITORY_PATH" value="${svn.path}" />
    <filter token="REVISION_NUMBER" value="${svn.version}" />

    <delete file="${src.dir}/com/unboundid/ldap/sdk/Version.java" />
    <copy file="${resource.dir}/Version.java.stub"
          tofile="${src.dir}/com/unboundid/ldap/sdk/Version.java"
          filtering="true">
      <filterset filtersfile="version.properties" onmissingfiltersfile="fail" />
    </copy>
  </target>




  <!-- Compile the Java source files. -->
  <target name="compile" description="Compile the Java source files"
          depends="clean,generatemessages,generateversion">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${classes.dir}" />

    <javac srcdir="${messages.gensrc.dir}" destdir="${classes.dir}"
           source="1.5" target="1.5" deprecation="true" fork="true"
           memoryInitialSize="${MEM}" memoryMaximumSize="${MEM}"
           optimize="true" debug="on" debuglevel="lines,source,vars">
      <compilerarg value="-Xlint:all" />
    </javac>

    <javac srcdir="${src.dir}" destdir="${classes.dir}" source="1.5"
           target="1.5" deprecation="true" fork="true"
           memoryInitialSize="${MEM}" memoryMaximumSize="${MEM}"
           optimize="true" debug="on" debuglevel="lines,source,vars">
      <compilerarg value="-Xlint:all" />
      <classpath>
        <pathelement location="${classes.dir}" />
      </classpath>
    </javac>

    <copy todir="${classes.dir}">
      <fileset dir="${messages.dir}">
        <include name="*.properties" />
      </fileset>
    </copy>
  </target>




  <!-- Perform checkstyle analysis on the code. -->
  <target name="checkstyle" description="Validate source code style"
          depends="compile">
    <mkdir dir="${checkstyle.cache.dir}" />

    <taskdef resource="checkstyletask.properties"
             classpath="${checkstyle.dir}/checkstyle-all-4.4.jar" />

    <checkstyle config="${checkstyle.dir}/ldapsdk-checkstyle.xml"
                classpath="${classes.dir}" failOnViolation="true">
      <fileset dir="${src.dir}" includes="**/*.java" />
      <formatter type="plain" />
    </checkstyle>
  </target>




  <!-- Create a distributable package including the JAR file, docs, etc. -->
  <target name="package" description="Create a distributable package"
          depends="compile,define-copydocs,checkstyle">
    <mkdir dir="${package.dir}" />

    <property name="basename"
              value="${SHORT_NAME}-${MAJOR_VERSION}.${MINOR_VERSION}.${POINT_VERSION}${VERSION_QUALIFIER}" />

    <property name="se.buildid" value="${basename}-se" />
    <property name="se.package.dir"
              location="${package.dir}/${se.buildid}" />

    <antcall target="package-se" />

    <antcall target="sanitycheck" inheritAll="true" inheritRefs="true" />
  </target>




  <!-- Define the task used to copy the documentation into place. -->
  <target name="define-copydocs">
    <mkdir dir="${copydocs.classes.dir}" />
    <javac srcdir="${copydocs.src.dir}" destdir="${copydocs.classes.dir}"
           target="1.5" deprecation="true" fork="true"
           memoryInitialSize="${MEM}" memoryMaximumSize="${MEM}"
           optimize="true" debug="on" debuglevel="lines,source,vars">
      <compilerarg value="-Xlint:all" />
      <classpath>
        <fileset dir="${ant.lib.dir}">
          <include name="*.jar" />
        </fileset>
      </classpath>
    </javac>

    <taskdef name="copydocs"
             classname="com.unboundid.buildtools.copydocs.CopyDocs">
      <classpath>
        <pathelement location="${copydocs.classes.dir}" />
      </classpath>
    </taskdef>
  </target>




  <!-- Create a distributable package for the standard edition. -->
  <target name="package-se">
    <mkdir dir="${se.package.dir}" />
    <mkdir dir="${se.package.dir}/android-ldap-client" />
    <mkdir dir="${se.package.dir}/docs" />
    <mkdir dir="${se.package.dir}/docs/javadoc" />

    <copy todir="${se.package.dir}">
      <fileset dir="${se.distroot.dir}">
        <include name="**/*" />
        <exclude name="**/.svn" />
      </fileset>
    </copy>

    <copydocs sourceDir="${docs.dir}" destinationDir="${se.package.dir}/docs"
              headerFile="${resource.dir}/localdoc.header"
              footerFile="${resource.dir}/localdoc.footer" extension="html"
              target="offline" />

    <copy todir="${se.package.dir}/docs">
      <fileset dir="${se.package.dir}">
        <include name="LICENSE*.txt" />
      </fileset>
    </copy>

    <copy todir="${se.package.dir}/docs/examples">
      <fileset dir="${src.dir}/com/unboundid/ldap/sdk/examples">
        <include name="*.java" />
        <exclude name="**/package-info.java" />
      </fileset>
    </copy>

    <copy todir="${se.package.dir}/android-ldap-client">
      <fileset dir="android-ldap-client">
        <exclude name="**/.svn" />
      </fileset>
    </copy>

    <property name="MMP"
              value="${MAJOR_VERSION}.${MINOR_VERSION}.${POINT_VERSION}" />
    <property name="VER" value=";version=&quot;${MMP}&quot;" />

    <jar jarfile="${se.package.dir}/unboundid-ldapsdk-se.jar"
         compress="true"
         index="true">
      <fileset dir="${classes.dir}">
        <exclude name="unboundid-controls.properties" />
        <exclude name="unboundid-extop.properties" />
        <exclude name="monitor.properties" />
        <exclude name="task.properties" />
        <exclude name="com/unboundid/ldap/sdk/unboundidds/**/*" />
      </fileset>
      <manifest>
        <attribute name="Main-Class" value="com.unboundid.ldap.sdk.Version" />
        <attribute name="Implementation-Title"
                   value="${PRODUCT_NAME} (Standard Edition)" />
        <attribute name="Implementation-Version"
                   value="${MMP}${VERSION_QUALIFIER}" />
        <attribute name="Implementation-Vendor" value="UnboundID Corp." />
        <attribute name="Implementation-URL"
                   value="http://www.unboundid.com/" />
        <attribute name="Bundle-ManifestVersion" value="2" />
        <attribute name="Bundle-Copyright"
                   value="Copyright 2008-${year} UnboundID Corp." />
        <attribute name="Bundle-Name"
                   value="UnboundID LDAP SDK for Java (Standard Edition)" />
        <attribute name="Bundle-SymbolicName"
                   value="com.unboundid.ldap.sdk.se" />
        <attribute name="Bundle-Vendor" value="UnboundID Corp." />
        <attribute name="Bundle-Version" value="${MMP}" />
        <attribute name="Bundle-RequiredExecutionEnvironment"
                   value="J2SE-1.5" />
        <attribute name="Bundle-Category" value="communication,network" />
        <attribute name="Bundle-DocURL"
                   value="http://www.unboundid.com/products/ldapsdk/" />
        <attribute name="Export-Package"
                   value="com.unboundid.asn1${VER},com.unboundid.ldap.matchingrules${VER},com.unboundid.ldap.sdk${VER},com.unboundid.ldap.sdk.controls${VER},com.unboundid.ldap.sdk.extensions${VER},com.unboundid.ldap.sdk.migrate.jndi${VER},com.unboundid.ldap.sdk.migrate.ldapjdk${VER},com.unboundid.ldap.sdk.schema${VER},com.unboundid.ldif${VER},com.unboundid.util${VER},com.unboundid.util.args${VER},com.unboundid.util.ssl${VER}" />
        <attribute name="Sealed" value="true" />
      </manifest>
    </jar>

    <javadoc destdir="${se.package.dir}/docs/javadoc" source="1.5"
             useexternalfile="true"
             additionalparam="-quiet" linksource="yes"
             windowtitle="UnboundID LDAP SDK for Java ${MAJOR_VERSION}.${MINOR_VERSION}.${POINT_VERSION}${VERSION_QUALIFIER} (Standard Edition)"
             doctitle="UnboundID LDAP SDK for Java&lt;br&gt;${MAJOR_VERSION}.${MINOR_VERSION}.${POINT_VERSION}${VERSION_QUALIFIER} (Standard Edition)"
             maxmemory="${MEM}" access="protected"
             stylesheetfile="${resource.dir}/unboundid-javadoc.css"
             bottom="&lt;div id=&quot;footer&quot;&gt;Copyright &amp;copy; 2008-${year} &amp;ndash; UnboundID Corp. &amp;ndash; All Rights Reserved.&lt;/div&gt;">
      <fileset dir="${src.dir}" defaultexcludes="yes">
        <exclude name="**/*Helper*" />
        <exclude name="**/*Constants*" />
        <exclude name="com/unboundid/ldap/sdk/unboundidds/**/*" />
        <exclude name="com/unboundid/util/parallel/**" />
      </fileset>
      <classpath>
        <pathelement location="${classes.dir}" />
      </classpath>
    </javadoc>

    <delete file="${se.package.dir}/docs/javadoc/resources/inherit.gif" />
    <copy file="${resource.dir}/inherit.gif"
          toFile="${se.package.dir}/docs/javadoc/resources/inherit.gif" />

    <fixcrlf srcDir="${se.package.dir}/tools" excludes="*.bat" eol="lf" />
    <fixcrlf srcDir="${se.package.dir}/tools" includes="*.bat" eol="crlf" />
    <chmod perm="755">
      <fileset dir="${se.package.dir}/tools">
        <exclude name="*.bat" />
      </fileset>
    </chmod>

    <zip destfile="${se.package.dir}/src.zip" compress="true">
      <zipfileset dir="${src.dir}" filemode="644" dirmode="755">
        <exclude name="com/unboundid/ldap/sdk/unboundidds/**/*" />
      </zipfileset>
      <zipfileset dir="${messages.gensrc.dir}" filemode="644" dirmode="755">
        <exclude name="com/unboundid/ldap/sdk/unboundidds/**/*" />
      </zipfileset>
      <zipfileset dir="${messages.dir}" filemode="644" dirmode="755">
        <exclude name="unboundid-controls.properties" />
        <exclude name="unboundid-extop.properties" />
        <exclude name="monitor.properties" />
        <exclude name="task.properties" />
      </zipfileset>
    </zip>

    <zip destfile="${package.dir}/${se.buildid}.zip" compress="true">
      <zipfileset dir="${package.dir}" includes="${se.buildid}/**/*"
                  filemode="644" dirmode="755">
        <exclude name="${se.buildid}/tools/*" />
      </zipfileset>
      <zipfileset dir="${package.dir}" filemode="644" dirmode="755">
        <include name="${se.buildid}/tools/*.bat" />
      </zipfileset>
      <zipfileset dir="${package.dir}" filemode="755" dirmode="755">
        <include name="${se.buildid}/tools/*" />
        <exclude name="${se.buildid}/tools/*.bat" />
      </zipfileset>
    </zip>
  </target>




  <!-- Run sanity checks on the Standard Edition. -->
  <target name="sanitycheck">
    <delete dir="${sc.classes.dir}" />
    <mkdir dir="${sc.classes.dir}" />

    <javac srcdir="${sc.src.dir}" destdir="${sc.classes.dir}" target="1.5"
           deprecation="true" fork="true" memoryInitialSize="${MEM}"
           memoryMaximumSize="${MEM}" optimize="true" debug="on"
           debuglevel="lines,source,vars">
      <compilerarg value="-Xlint:all" />
      <classpath>
        <fileset dir="${ant.lib.dir}">
          <include name="*.jar" />
        </fileset>
        <fileset dir="${se.package.dir}">
          <include name="*.jar" />
        </fileset>
      </classpath>
    </javac>

    <taskdef name="scse"
             classname="com.unboundid.buildtools.sanitycheck.SanityCheckSE">
      <classpath>
        <pathelement location="${sc.classes.dir}" />
        <fileset dir="${se.package.dir}">
          <include name="*.jar" />
        </fileset>
      </classpath>
    </taskdef>

    <scse baseDir="${se.package.dir}" dsHost="${ds.host}" dsPort="${ds.port}" />
  </target>

</project>

